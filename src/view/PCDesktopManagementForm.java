/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DateTimeThread;
import model.PCDesktop;
import sevrice.QlPCDesktop;

/**
 *
 * @author Admin
 */
public class PCDesktopManagementForm extends javax.swing.JFrame {

    private QlPCDesktop qlPCDesktop = new QlPCDesktop();
//    private String filename = "r_vanntph19604.txt";

    public PCDesktopManagementForm() {
        initComponents();
        DateTimeThread dtt = new DateTimeThread(txtTime);
        dtt.start();

        this.clearForm();
    }

    private void SaveFile() throws IOException {
        FileWriter writer = new FileWriter("vanntph19604.txt");
        for (PCDesktop x : qlPCDesktop.layDsPCDesktop()) {
            writer.write(
                    x.getDesktopId() + ";"
                    + x.getDesktopName() + ";"
                    + x.getQuantity() + ";"
                    + x.getPrice() + ";"
                    + x.getRam() + ";"
                    + x.getChip() + "\n"
            );
        }
        writer.close();
    }

    private void ReadFile() throws FileNotFoundException, IOException {
        FileReader reader = new FileReader("vanntph19604");
        BufferedReader br = new BufferedReader(reader);
        String line = br.readLine();
        while (line != null) {
            String arr[] = line.split(";");
            PCDesktop pcd = new PCDesktop(Long.parseLong(arr[0]), arr[1], Integer.parseInt(arr[2]), BigDecimal.valueOf(Integer.parseInt(arr[3])), arr[4], Integer.parseInt(arr[5]));
            qlPCDesktop.themPCDesktop(pcd);
            line = br.readLine();
            hienThiDanhSach();
        }
        br.close();
        reader.close();
    }

    /**
     * .
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRam = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtChip = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpDate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTable = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();
        txtTime = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ PC DESKTOP");

        jLabel2.setText("Mã Sản Phẩm");

        jLabel3.setText("Số Lượng");

        jLabel4.setText("Tên Sản Phẩm");

        jLabel5.setText("Đơn Gía");

        jLabel6.setText("Ram");

        jLabel7.setText("Chip");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpDate.setText("Update");
        btnUpDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpDateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTable);

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        txtTime.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        txtTime.setForeground(new java.awt.Color(255, 0, 0));
        txtTime.setText("12:00");

        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExit))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(42, 42, 42)
                                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtRam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSave)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnLoad)))
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(btnAdd))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnUpDate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                        .addComponent(btnDelete))
                                    .addComponent(txtChip, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(txtTenSanPham)
                                    .addComponent(txtDonGia)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnAdd)
                    .addComponent(btnUpDate)
                    .addComponent(btnDelete)
                    .addComponent(btnLoad))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(txtTime))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        boolean checkExists = true;
        PCDesktop pcMoi = layThongTinSanPham();
        for (PCDesktop x : qlPCDesktop.layDsPCDesktop()) {
            if (x.getDesktopId().equals(pcMoi.getDesktopId())) {
                JOptionPane.showMessageDialog(this, "Id đã tồn tại", "Erro", JOptionPane.ERROR_MESSAGE);
                checkExists = false;
            }
        }
        if (checkExists) {
            qlPCDesktop.themPCDesktop(pcMoi);
            hienThiDanhSach();
            this.clearForm();
            JOptionPane.showMessageDialog(this, "Thêm Mới Thành Công!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpDateActionPerformed
        // TODO add your handling code here:
        int row = this.tbTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Hãy chọn 1 dòng cần sửa!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa bản ghi này không?");
        if (confirm == JOptionPane.NO_OPTION) {
            return;
        } else if (confirm == JOptionPane.CANCEL_OPTION) {
            return;
        } else {

        }
//        boolean checkExists = true;
//        PCDesktop pcCapNhat = layThongTinSanPham();
//        for (PCDesktop x : qlPCDesktop.layDsPCDesktop()) {
//            if (x.getDesktopId().equals(pcCapNhat.getDesktopId())) {
//                JOptionPane.showMessageDialog(this, "Id đã tồn tại", "Erro", JOptionPane.ERROR_MESSAGE);
//                checkExists = false;
//            }
//        }
//        if (checkExists) {
//            qlPCDesktop.capNhatPCDesktopTheoMa(pcCapNhat);
//            hienThiDanhSach();
//            this.clearForm();
//            JOptionPane.showMessageDialog(this, "Cập Nhật Thành Công!");
//        }

        PCDesktop pccapnhat = layThongTinSanPham();
        qlPCDesktop.capNhatPCDesktopTheoMa(pccapnhat);
        hienThiDanhSach();
        this.clearForm();
        JOptionPane.showMessageDialog(this, "Cập Nhật Thành Công");
    }//GEN-LAST:event_btnUpDateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa bản ghi này không?");
        if (confirm == JOptionPane.NO_OPTION) {
            return;
        } else if (confirm == JOptionPane.CANCEL_OPTION) {
            return;
        } else {

        }

        int row = this.tbTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Hãy chọn 1 dòng trên table bạn muốn xóa");
            return;
        }

        String desktopIdStr = txtMaSanPham.getText();
        Long desktopId = Long.parseLong(desktopIdStr);
        qlPCDesktop.xoaPCDesktop(desktopId);
        hienThiDanhSach();
        this.clearForm();
        JOptionPane.showMessageDialog(this, "Xóa Thành Công!");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            SaveFile();
            JOptionPane.showMessageDialog(this, "Lưu thành công");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Lưu file không thành công", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tbTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTableMouseClicked
        // TODO add your handling code here:
        System.out.println(tbTable.getSelectedRow());
        int selectedRow = tbTable.getSelectedRow();
        String desktopId = tbTable.getValueAt(selectedRow, 0).toString();
        String desktopName = tbTable.getValueAt(selectedRow, 1).toString();
        String quantity = tbTable.getValueAt(selectedRow, 2).toString();
        String price = tbTable.getValueAt(selectedRow, 3).toString();
        String ram = tbTable.getValueAt(selectedRow, 4).toString();
        String chip = tbTable.getValueAt(selectedRow, 5).toString();

        txtMaSanPham.setText(desktopId);
        txtTenSanPham.setText(desktopName);
        txtSoLuong.setText(quantity);
        txtDonGia.setText(price);
        txtRam.setText(ram);
        txtChip.setText(chip);
    }//GEN-LAST:event_tbTableMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát chương trình không?");
        if (confirm == JOptionPane.NO_OPTION) {
            return;
        } else if (confirm == JOptionPane.CANCEL_OPTION) {
            return;
        } else {

        }
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
//        try {
//            // TODO add your handling code here:
//            ReadFile();
//            JOptionPane.showMessageDialog(this, "Load File thành công");
//        } catch (IOException ex) {
//            JOptionPane.showMessageDialog(this, "Load File thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
        FileReader reader = null;
        try {
            reader = new FileReader("r_vanntph19604.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PCDesktopManagementForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(reader);
        String line = "";
        try {
            line = br.readLine();
        } catch (IOException ex) {
            Logger.getLogger(PCDesktopManagementForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (line != null) {
            String arr[] = line.split(";");
            PCDesktop pcd = new PCDesktop(Long.parseLong(arr[0]), arr[1], Integer.parseInt(arr[2]), BigDecimal.valueOf(Integer.parseInt(arr[3])), arr[4], Integer.parseInt(arr[5]));
            qlPCDesktop.themPCDesktop(pcd);
            try {
                line = br.readLine();
            } catch (IOException ex) {
                Logger.getLogger(PCDesktopManagementForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            hienThiDanhSach();
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(PCDesktopManagementForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            reader.close();
        } catch (IOException ex) {
            Logger.getLogger(PCDesktopManagementForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoadActionPerformed

    private void hienThiDanhSach() {
        DefaultTableModel model = (DefaultTableModel) tbTable.getModel();

        model.setColumnCount(0);
        model.addColumn("Mã Sản Phẩm");
        model.addColumn("Tên Sản Phẩm");
        model.addColumn("Số Lượng");
        model.addColumn("Đơn Gía");
        model.addColumn("Ram");
        model.addColumn("Chip");

        model.setRowCount(0);

        List<PCDesktop> dsPCDesktop = qlPCDesktop.layDsPCDesktop();

        for (PCDesktop pcdesktop : dsPCDesktop) {
            Object[] row = new Object[6];
            row[0] = pcdesktop.getDesktopId();
            row[1] = pcdesktop.getDesktopName();
            row[2] = pcdesktop.getQuantity();
            row[3] = pcdesktop.getPrice();
            row[4] = pcdesktop.getRam();
            row[5] = pcdesktop.getChip();

            model.addRow(row);
        }
    }

    private PCDesktop layThongTinSanPham() {
        String desktopIdStr = txtMaSanPham.getText();
        Long desktopId = Long.parseLong(desktopIdStr);

        String desktopName = txtTenSanPham.getText();

        String quantityStr = txtSoLuong.getText();
        Integer quantity = Integer.parseInt(quantityStr);

        String priceStr = txtDonGia.getText();
        Long priceLong = Long.parseLong(priceStr);
        BigDecimal price = BigDecimal.valueOf(priceLong);

        String ramStr = txtRam.getText();
        Integer ram = Integer.parseInt(ramStr);

        String chip = txtChip.getText();

        if (txtMaSanPham.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Mã Sản Phẩm Không Được Để Trống!");
            txtMaSanPham.setBackground(Color.red);
            return null;
        } else {
            txtMaSanPham.setBackground(Color.white);
        }
        if (txtTenSanPham.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Tên Sản Phẩm Không Được Để Trống!");
            txtTenSanPham.setBackground(Color.red);
            return null;
        } else {
            txtTenSanPham.setBackground(Color.white);
        }
        if (txtSoLuong.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Số Lượng Không Được Để Trống!");
            txtSoLuong.setBackground(Color.red);
            return null;
        } else if (Integer.parseInt(txtSoLuong.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "Số Lượng phải lớn hơn 0!");
            return null;
        } else {
            txtSoLuong.setBackground(Color.white);
        }
        if (txtDonGia.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Đơn Gía Không Được Để Trống!");
            txtDonGia.setBackground(Color.red);
            return null;
        } else if (price.compareTo(BigDecimal.valueOf(0)) < 0) {
            JOptionPane.showMessageDialog(this, "Đơn Gía phải lớn hơn 0!");
            return null;
        } else {
            txtDonGia.setBackground(Color.white);
        }
        if (txtRam.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Ram Không Được Để Trống");
            txtRam.setBackground(Color.red);
            return null;
        } else if (Integer.parseInt(txtRam.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "Dung lượng Ram phải lớn hơn 0!");
            return null;
        } else {
            txtRam.setBackground(Color.white);
        }
        if (txtChip.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chip Không Được Để Trống!");
            txtChip.setBackground(Color.red);
            return null;
        } else {
            txtChip.setBackground(Color.white);
        }

        return new PCDesktop(desktopId, desktopName, quantity, price, chip, ram);
    }

    private void clearForm() {
        this.txtMaSanPham.setText("");
        this.txtTenSanPham.setText("");
        this.txtSoLuong.setText("");
        this.txtDonGia.setText("");
        this.txtRam.setText("");
        this.txtChip.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PCDesktopManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PCDesktopManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PCDesktopManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PCDesktopManagementForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PCDesktopManagementForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTable;
    private javax.swing.JTextField txtChip;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtRam;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables
}
